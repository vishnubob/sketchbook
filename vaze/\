Grid grid = new Grid();

public class Grid
{
    private int _interval;

    public void init(int interval)
    {
        _interval = interval;
    }

    public void draw_grid()
    {
        rectMode(CENTER);
        for(int y = (_interval / 2); y <= height; y += (2 * _interval))
        {
            for(int x = (_interval / 2); x <= width; x += (2 * _interval))
            {
                rect(x, y, _interval, _interval);
            }
        }
    }
}

void setup() 
{
    //noCursor();
    int interval = 10;
    int nodes = 40;
    int wh = interval * (nodes + nodes - 1);

    size(wh, wh);
    grid.init(interval);
    frameRate(30);
}

void keyPressed()
{
}

void draw() 
{
    grid.draw_grid();
}

int[] unpack_rgb(int color_value)
{
    int rgb[] = new int[3];
    rgb[0] = (color_value >> 16) & 0xFF;
    rgb[1] = (color_value >> 8) & 0xFF;
    rgb[2] = color_value & 0xFF;
    return rgb;
}

int pack_rgb(int[] rgb)
{
    return (min(rgb[0], 0xFF) << 16) | (min(rgb[1], 0xFF) << 8) | min(rgb[2], 0xFF);
}

int scale_rgb(int rgb, double scale)
{
    int rgb_values[] = unpack_rgb(rgb);
    scale_rgb_array(rgb_values, scale);
    return pack_rgb(rgb_values);
}

void scale_rgb_array(int rgb[], double scale)
{
    for (int idx = 0; idx < 3; ++idx)
    {
        rgb[idx] *= scale;
    }
}
